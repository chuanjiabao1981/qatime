<% content_for :stylesheet do %>
  <%= stylesheet_link_tag "live_studio/nep.min.css" %>
<% end %>
<% content_for :javascript do %>
  <%= javascript_include_tag "live_studio/nep.min.js" %>
  <%= javascript_include_tag "live_studio/Web_SDK_Base_v2.4.0.js" %>
  <%= javascript_include_tag "live_studio/Web_SDK_NIM_v2.4.0.js" %>
<% end %>


<% channel = @course.channels.first %>
<div class="qa_sep_15"></div>

<div class="row">
  <div class="col-md-4">
    <div class="panel panel-default">
      <div class="panel-body">
        <ul class="nav nav-tabs" id="chat-tabs">
          <li role="members"><a href="#members"><%= t("activerecord.view.chat.team_members") %></a></li>
          <li role="message" class="active"><a href="#message"><%= t("activerecord.view.chat.team_message") %></a></li>
          <li role="notice"><a href="#notice"><%= t("activerecord.view.chat.team_notice") %></a></li>
        </ul>
        <div panel panel-default id="chat-panels">
          <div class="panel-body" id="members-panel" style="display: none;">
          </div>
          <div class="panel-body" id="message-panel">
            <div id="messages">
            </div>
            <div>
              <form action="##" id="message-form">
                <textarea name="message" id="message-area" cols="40" rows="5"></textarea>
                <input type="submit" name="send" id="send-btn">
              </form>
            </div>
          </div>
          <div class="panel-body" id="notice-panel" style="display: none;">
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-md-1">
  </div>

  <div class="col-md-8">
    <!-- 根据flash是否安装，来显示 -->
    <video id="my-video" class="video-js" controls poster="<%= image_url('publish-bg.png') %>" preload="auto" width="800" height="480" data-setup='{}' style="display:none;">
      <source "src"="MY_VIDEO.mp4" type="video/mp4">
    </video>

    <div style="display:none; height: 480px; width: 800px; background-color: #FFF; padding-top: 50px" id="no-flash-area">
      <p align="center">
        <%= t("activerecord.view.flash_can_not_call_msg.flash_uninstall_or_too_old_msg") %><a href="https://get.adobe.com/cn/flashplayer/"><%= t("activerecord.view.flash_can_not_call_msg.click_here_msg") %></a><%= t("activerecord.view.flash_can_not_call_msg.install_flash_msg") %>
      </p>
    </div>
  </div>
</div>

<div id="media-template" style="display: none;">
  <div class="media">
    <div class="media-left">
      <a href="##">
        <img class="media-object" height="30" width="30" style="width: 30px; height: 30px;" src="" alt="...">
      </a>
    </div>
    <div class="media-body">
    </div>
  <div>
</div>

<script>
$(function() {
  $("#chat-tabs").click(function(event) {
    if($(event.target).parent("li").hasClass("active")) return false;
    $("#chat-tabs li").removeClass("active");
    $(event.target).parent("li").addClass("active");
    var panel_name = $(event.target).parent("li").attr("role");
    $("#chat-panels .panel-body").hide();
    $("#" + panel_name + "-panel").show();
  });

  $("#message-form").submit(function() {
    var msg = nim.sendText({
      scene: 'team',
      to: '7443987',
      text: $("#message-area").val(),
      done: sendMsgDone
    });
    console.log('正在发送p2p text消息, id=' + msg.idClient);
    $("#message-area").val("");
    pushMsg(msg);
    return false;
  });

  function sendMsgDone(error, msg) {
      console.log(error);
      console.log(msg);
      console.log('发送' + msg.scene + ' ' + msg.type + '消息' + (!error?'成功':'失败') + ', id=' + msg.idClient);
      $("#messages").append("<div>我 说: " + msg.text + "</div>");
      pushMsg(msg);
  }

  var data = {};
  var nim = NIM.getInstance({
    // debug: true,
    appKey: '598009675f2c399d27f3292c3425c1a8',
    account: 'cwheart',
    token: 'cwheart',
    onconnect: onConnect,
    onwillreconnect: onWillReconnect,
    ondisconnect: onDisconnect,
    onerror: onError,
    onteams: onTeams,
    onsynccreateteam: onCreateTeam,
    onteammembers: onTeamMembers,
    onsyncteammembersdone: onSyncTeamMembersDone,
    onupdateteammember: onUpdateTeamMember,
    onroamingmsgs: onRoamingMsgs,
    onofflinemsgs: onOfflineMsgs,
    onmsg: onMsg
  });
  function onConnect() {
      console.log('连接成功');
  }
  function onWillReconnect(obj) {
      // 此时说明 SDK 已经断开连接, 请开发者在界面上提示用户连接已断开, 而且正在重新建立连接
      console.log('即将重连');
      console.log(obj.retryCount);
      console.log(obj.duration);
  }
  function onDisconnect(error) {
      // 此时说明 SDK 处于断开状态, 开发者此时应该根据错误码提示相应的错误信息, 并且跳转到登录页面
      console.log('丢失连接');
      console.log(error);
      if (error) {
          switch (error.code) {
          // 账号或者密码错误, 请跳转到登录页面并提示错误
          case 302:
              break;
          // 被踢, 请提示错误后跳转到登录页面
          case 'kicked':
              break;
          default:
              break;
          }
      }
  }
  function onError(error) {
      console.log(error);
  }


  function onTeams(teams) {
      console.log('收到群列表', teams);
      data.teams = nim.mergeTeams(data.teams, teams);
      onInvalidTeams(teams.invalid);
  }
  function onInvalidTeams(teams) {
      data.teams = nim.cutTeams(data.teams, teams);
      data.invalidTeams = nim.mergeTeams(data.invalidTeams, teams);
      refreshTeamsUI();
  }
  function onCreateTeam(team) {
      console.log('你创建了一个群', team);
      data.teams = nim.mergeTeams(data.teams, team);
      refreshTeamsUI();
      onTeamMembers({
          teamId: team.teamId,
          members: owner
      });
  }
  function refreshTeamsUI() {
      // 刷新界面
  }
  function onTeamMembers(obj) {
      var teamId = obj.teamId;
      var members = obj.members;
      console.log('群id', teamId, '群成员', members);
      data.teamMembers = data.teamMembers || {};
      data.teamMembers[teamId] = nim.mergeTeamMembers(data.teamMembers[teamId], members);
      data.teamMembers[teamId] = nim.cutTeamMembers(data.teamMembers[teamId], members.invalid);
      refreshTeamMembersUI(teamId);
  }
  function onSyncTeamMembersDone() {
      console.log('同步群列表完成');
  }
  function onUpdateTeamMember(teamMember) {
      console.log('群成员信息更新了', teamMember);
      onTeamMembers({
          teamId: teamMember.teamId,
          members: teamMember
      });
  }
  function onRoamingMsgs(obj) {
      console.log('收到漫游消息', obj);
      pushMsg(obj.msgs);
  }
  function onOfflineMsgs(obj) {
      console.log('收到离线消息', obj);
      pushMsg(obj.msgs);
  }
  function onMsg(msg) {
      console.log('收到消息', msg.scene, msg.type, msg);
      pushMsg(msg);
      onCustomMsg(msg);
  }
  function pushMsg(msgs) {
      if (!Array.isArray(msgs)) { msgs = [msgs]; }
      var sessionId = msgs[0].sessionId;
      data.msgs = data.msgs || {};
      data.msgs[sessionId] = nim.mergeMsgs(data.msgs[sessionId], msgs);
  }
  function onCustomMsg(msg) {
    // 处理自定义消息
    $("#messages").append("<div>" + msg.from + "说: " + msg.text + "</div>");
  }

  function onTeamNotificationMsg(msg) {
    // 系统消息处理
    $("#messages").append("<div>" + msg + "</div>");
  }


  function refreshTeamMembersUI(teamId) {
    var members = data.teamMembers[teamId];
    $.each(members, function(index){
      var member = members[index];
      console.log(member);
      var media = $("#media-template .media").clone();
      media.find("img").attr("src", "https://ruby-china-files.b0.upaiyun.com/user/big_avatar/2110.jpg");
      media.find(".media-body").text(member.account);
      console.log(media);

      $("#members-panel").append(media);
    });
  }


});

//判断flash是否安装方法
function flashChecker(){
  var hasFlash=0;　　　　//是否安装了flash
  var flashVersion=0;　　//flash版本

  if(document.all)
  {
    var swf = new ActiveXObject('ShockwaveFlash.ShockwaveFlash');
    if(swf) {
      hasFlash=1;
      VSwf=swf.GetVariable("$version");
      flashVersion=parseInt(VSwf.split(" ")[1].split(",")[0]);
    }
  }else
  {
    if (navigator.plugins && navigator.plugins.length > 0)
    {
      var swf=navigator.plugins["Shockwave Flash"];
      if (swf)
      {
        hasFlash=1;
        var words = swf.description.split(" ");
        for (var i = 0; i < words.length; ++i)
        {
          if (isNaN(parseInt(words[i]))) continue;
          flashVersion = parseInt(words[i]);
        }
      }
    }
  }
  return {f:hasFlash,v:flashVersion};
}

var fls=flashChecker();

if(fls.f) //判断flash是否安装
{
  $("#my-video").show() //显示播放器
  var myPlayer = neplayer("my-video", {}, function() {
  });
  myPlayer.setDataSource({
    type: "rtmp/flv",
    src: "<%= channel.pull_streams.last.address %>"
  });

  myPlayer.play();

  myPlayer.onError(function(err){
    console.log(err.errCode);
    console.log(err.errMsg);
  });
}
else{
  $("#no-flash-area").show() //提示div
}
</script>
