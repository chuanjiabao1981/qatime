<div class="live-message">
  <div class="message-title">
    <%= link_to t("view.play.talk"), "javascript:void(0);", class: "active" %>
    <%= link_to t("view.play.announcement"), "javascript:void(0);" %>
    <%= link_to t("view.play.members"), "javascript:void(0);" %>
  </div>
  <div class="message-content">
    <div class="message-con active" id="chat">
      <div class="message-new" id="messages">
      </div>

      <div class="information-face">
        <%= image_tag 'face-2.png', id: "emotion-btn" %>
        <%= image_tag 'face-1.png', id: "clear-btn" %>
        <%= link_to t("view.play.chat_history"), "javascript: void(0);", id: "history-btn",
                    "data-toggle" => "modal", "data-target" => "#history-modal", style: "float: right;" %>
      </div>


      <div class="information-send">
        <%= form_tag '', id: 'message-form', remote: true do -%>
        <div class="send-msg">
          <%= text_area_tag "message-area" %>
          <%= submit_tag t("view.play.send_msg") %>
        </div>
        <% end -%>
      </div>
    </div>

    <div class="message-con" id="announcements">
      <div class="message-new affiche" id="notice-panel">
        <div class="new-information">
          <div class="information-con" id="notice-content">
            <%= @chat_team.announcement %>
          </div>
        </div>
        <% if @chat_team.announcement.blank? %>
          <div class="no-announcement"><p><%= t("view.play.announcement_none") %></p></div>
        <% end %>
      </div>
    </div>

    <div class="message-con" id="members">
      <div class="message-new affiche" id="members-panel">
      </div>
    </div>
  </div>
</div>


<%= content_for :mask do %>
  <div id="histories" class="message-logging">
    <div class="logging-title">
      <div class="logging-left">
        <span><%= t("common.message_history") %></span>
      </div>
      <div class="logging-center">
        <span class="glyphicon glyphicon-chevron-left subtract-jedate"></span>
        <input type="text" class="workinput wicon mr25" id="inpstart" />
        <span class="glyphicon glyphicon-chevron-right add-jedate"></span>
        <label for="inpstart" class="glyphicon glyphicon-calendar date-icon"></label>
      </div>

      <div class="logging-right">
        <%= link_to "", "javascript: void(o);", id: "history-close", class: "fa fa-times" %>
      </div>
    </div>
    <div class="history-content">
      <div class="logging-more" id="logging-more"><%= t("view.play.more") %></div>
      <div class="logging-nomore" id="logging-nomore"><%= t("view.play.nomore") %></div>

      <div class="message-con active" id="messages-group">
      </div>
    </div>
  </div>

  <div class="outerdiv">
    <div class="innerdiv">
      <div class="accept-down"></div>
      <img class="bigimg" src="" >
    </div>
  </div>
<% end %>

<%= content_for :javascript do %>
<script>
var chatInited = false;

function refreshTeamMembersUI(teamId, fn) {
  if(teamId != currentTeam.id) return;
  $.get('/chat/teams/' + teamId + '/members',function(data){
    $("#members-panel").html(data);
    if(fn) fn();
  });
}

function chatInitCallback() {
  chatInited = true;
}

$(function() {

  // 图片消息查看大图功能
  $(document).click(function (event) {
    $('.outerdiv').hide();
  });

  $(".innerdiv").click(function  () {
    event.stopPropagation();
    $(this).show();
  })

  var accid = "<%= @chat_account.try(:accid) %>";
  var token = "<%= @chat_account.try(:token) %>";
  var team_role = "<%= @join_record.try(:role) %>";
  var chat_team_id = "<%= @chat_team.try(:team_id) %>";
  var owner_id = "<%= @chat_team.try(:owner) %>";

  window.live_chat = new LiveChat("<%= Chat::IM.app_key %>");
  live_chat.config(accid, token, chat_team_id, owner_id);
  live_chat.init(function() {
    refreshTeamMembersUI(chat_team_id, chatInitCallback);
  });

  // 聊天表情
  $("#emotion-btn").qqFace({ assign: "message-area", path: "<%= asset_path('assets/face/') %>" }, function() {
    $("#message-area").focus();
  });


  // 历史消息
  $('#history-btn').click(function(event) {
    $("#histories").show();
    messageHistory($("#inpstart").val());
  });

  $("#history-close").click(function() {
    $("#histories").hide();
  });

  // 加载更多历史消息
  $("#logging-more").click(function() {
    var endTime = parseInt($("#messages-group div:first").attr("end-time"));
    messageHistory($("#inpstart").val(), endTime);
  });

  $("#history-area").scroll(function() {
    if(!$(this).hasClass( "loading" ) && time_str != 0){
      if ($("#history-area").scrollTop() < 150){
        appendHistoryMsgs(event,time_str,1);
      }
    }
  });

  function appendHistoryMsgs(event,end_time,type) {
    if(!chatInited) return false;
    $("#history-area").addClass("loading")
    if (type == 0) $("#history-area").empty();
    var msg = live_chat.nim.getHistoryMsgs({
      scene: 'team',
      to: live_chat.teamId,
      endTime: end_time,
      asc: true,
      limit: 20,
      done: getHistoryMsgsDone
    });

    if (type == 0) {
      var scrolled = false;
      function updateScroll(){
        if(!scrolled){
          var element = document.getElementById("history-area");
          element.scrollTop = element.scrollHeight;
        }
      }
      $("#history-area").on('scroll', function(){
        scrolled=true;
      });
      window.setInterval(updateScroll);
    }
  }

  function getHistoryMsgsDone(error, obj) {
    console.log('获取p2p历史消息' + (!error ? '成功' : '失败'));
    if (!error) {
      $("#messages-group div:first").empty();
      if(obj.msgs.length > 0) $("#messages-group div:first").attr("end-time", obj.msgs[0].time);
      obj.msgs.forEach(function(msg){
        if(msg.type != "notification"){
          var messageNode = $("<div class='new-information'></div>");
          var messageTitle = $("<div class='information-title'></div>");
          messageTitle.append("<img src='" + $("#member-icons").find("img.icon-" + msg.from).attr("src") + "' />");

          if(msg.from == accid){
            messageTitle.append("<span class='information-name'>" + msg.fromNick + "(我)</span>");
            messageNode.addClass("new-information-stu");
          } else if(msg.from == owner_id) {
            messageTitle.append("<span class='information-name'>" + msg.fromNick + "(老师)</span>");
          } else {
            messageTitle.append("<span class='information-name'>" + msg.fromNick + "</span>");
            messageNode.addClass("new-information-else");
          }
          messageTitle.append("<span class='information-time'>" + sendMessageTime(msg) + "</span>");
          messageNode.append(messageTitle);
          var messageContent = messageTag(msg, 'roaming');
          messageNode.append(messageContent);
          $("#messages-group div:first").append(messageNode);
        }
      });
      if(obj.msgs.length >= 100) {
        // 加载更多消息按钮
        $("#logging-more").show();
      } else {
        // 没有更多消息
        $("#logging-nomore").show();
      }
    }
  }

  function messageHistory(messageDate, endTime) {
    messageDate = messageDate.replace(/年/, '-').replace(/月/, '-').replace(/日/, '');
    beginTime = Date.parse(messageDate);
    if(!endTime) {
      // 第一次加载时清空数据
      $("#messages-group").empty();
      endTime = beginTime + 24 * 60 * 60 * 1000;
    }
    // 聊天窗口群组没有初始化不能加载聊天新记录
    if(!chatInited) return false;
    // 显示加载状态
    var historyParams = {
      scene: 'team',
      to: live_chat.teamId,
      beginTime: beginTime,
      endTime: endTime,
      asc: true,
      done: getHistoryMsgsDone
    }

    $("#logging-more").hide();
    $("#logging-nomore").hide();
    $("#messages-group").prepend("<div class='logging-con'><center>加载中......</center></div>");
    live_chat.nim.getHistoryMsgs(historyParams);
  }


  // 日历插件

  var start = {
    skinCell:"jedatered",
    clearRestore:false,
    format: 'YYYY年MM月DD',
    minDate: '2016-06-11 00:00:00', //设定最小日期为当前日期
    isinitVal:true,
    isClear:false, 
    festival:false,
    ishmsVal:false,
    maxDate: '2099-06-30 23:59:59', //最大日期
    choosefun: function() {
      // 加载当天数据
      messageHistory($("#inpstart").val());
    }
  };

  $('#inpstart').jeDate(start);

  function addByTransDate(dateParameter, num) {
    var translateDate = "", dateString = "", monthString = "", dayString = "";
    translateDate = dateParameter.replace("年", "/").replace("月", "/");
    var newDate = new Date(translateDate);
    newDate = newDate.valueOf();
    newDate = newDate + num * 24 * 60 * 60 * 1000;
    newDate = new Date(newDate);
    //如果月份长度少于2，则前加 0 补位  
    if ((newDate.getMonth() + 1).toString().length == 1) {
      monthString = 0 + "" + (newDate.getMonth() + 1).toString();
    } else {
      monthString = (newDate.getMonth() + 1).toString();
    }
    //如果天数长度少于2，则前加 0 补位  
    if (newDate.getDate().toString().length == 1) {
      dayString = 0 + "" + newDate.getDate().toString();
    } else {
      dayString = newDate.getDate().toString();
    }
    dateString = newDate.getFullYear() + "年" + monthString + "月" + dayString;
    return dateString;
  }
   
  function reduceByTransDate(dateParameter, num) {
  
    var translateDate = "", dateString = "", monthString = "", dayString = "";
    translateDate = dateParameter.replace("年", "/").replace("月", "/");
    var newDate = new Date(translateDate);
    newDate = newDate.valueOf();
    newDate = newDate - num * 24 * 60 * 60 * 1000;
    newDate = new Date(newDate);
    //如果月份长度少于2，则前加 0 补位  
    if ((newDate.getMonth() + 1).toString().length == 1) {
      monthString = 0 + "" + (newDate.getMonth() + 1).toString();
    } else {
      monthString = (newDate.getMonth() + 1).toString();
    }
    //如果天数长度少于2，则前加 0 补位  
    if (newDate.getDate().toString().length == 1) {
      dayString = 0 + "" + newDate.getDate().toString();
    } else {
      dayString = newDate.getDate().toString();
    }
    dateString = newDate.getFullYear() + "年" + monthString + "月" + dayString;
    return dateString;
  }
 
  //得到日期  主方法
  function showTime(pdVal) {
    var trans_day = "";
    var cur_date = new Date($("#inpstart").val().replace("年", "/").replace("月", "/"));
    var cur_year = new Date($("#inpstart").val().replace("年", "/").replace("月", "/")).getFullYear();
    var cur_month = cur_date.getMonth() + 1;
    var real_date = cur_date.getDate();
    cur_month = cur_month > 9 ? cur_month : ("0" + cur_month);
    real_date = real_date > 9 ? real_date : ("0" + real_date);
    eT = cur_year + "年" + cur_month + "月" + real_date;
    if (pdVal == 1) {
      trans_day = addByTransDate(eT, 1);
    }
    else if (pdVal == -1) {
      trans_day = reduceByTransDate(eT, 1);
    }
    else {
      trans_day = eT;
    }
   //处理
    return trans_day;
  }

  function date() {
    tqyt=showTime(-1);
    thyt=showTime(1);
  }
  var tqyt;
  var thyt;
  $(".subtract-jedate").click(function  () {
    date ();
    $("#inpstart").val(tqyt);
    // 加载当天数据
    messageHistory($("#inpstart").val());
  });
  $(".add-jedate").click(function  () {
    date ();
    $("#inpstart").val(thyt);
    // 加载当天数据
    messageHistory($("#inpstart").val());
  });


  $(".logging-title").mousedown(function(){
    var abs_x = event.clientX - $('.message-logging').offset().left;
    var abs_y = event.clientY - $('.message-logging').offset().top;
    $(document).mousemove(function (e) {
      var xPos = (e.clientX - abs_x)  + "px";
      var yPos = (e.clientY - abs_y) + "px";
      $(".message-logging").css("left", xPos);  
      $(".message-logging").css("top", yPos);  
    }); 
  });

  $(document).mouseup(function(){
    $(document).unbind('mousemove');
  });
});

// 加载公告
function refreshNotice() {
  console.log(chatInited);
  $.getJSON("/live_studio/<%= @course.id %>/realtime/announcements", function(data) {
    $("#notice-panel").empty();
    data.forEach(function(announcement) {
      var item = $('<div class="new-information"></div>');
      var itemTitle = $('<div class="information-title"></div>');
      if(announcement.lastest) {
        // itemTitle.append('<%= image_tag("livenotice.png") %>');
        // itemTitle.append('<span class="information-time">' + announcement.create_time + '</span>');
        // item.append(itemTitle);
        item.append('<div class="information-con">' + announcement.content + '</div>');
        $("#notice-panel").html(item);
      }
    });
    if(data.length == 0){
      $("#notice-panel").html('<div class="no-announcement"><p><%= t("view.play.announcement_none") %></p></div>')
    }
  });
}
// refreshNotice();

function accept_img_click(obj){
  console.log('image click');
  event.stopPropagation();
  var _this = $(obj);
  imgShow(".outerdiv", ".innerdiv", ".bigimg", _this);
}

function imgShow(outerdiv, innerdiv, bigimg, _this){
  var src = _this.attr("src");
  console.log(src);
  console.log(bigimg);
  $(bigimg).attr("src", src);
  $("<img/>").attr("src", src).load(function(){
    var windowW = $(window).width();
    var windowH = $(window).height();
    var realWidth = this.width;
    var realHeight = this.height;
    var imgWidth, imgHeight;
    var scale = 0.8;
    if(realHeight>windowH*scale) {
      imgHeight = windowH*scale;
      imgWidth = imgHeight/realHeight*realWidth;
      if(imgWidth>windowW*scale) {
        imgWidth = windowW*scale;
      }
    } else if(realWidth>windowW*scale) {
      imgWidth = windowW*scale;
      imgHeight = imgWidth/realWidth*realHeight;
    } else {
      imgWidth = realWidth;
      imgHeight = realHeight;
    }
    $(bigimg).css("width",imgWidth);
    var w = (windowW-imgWidth)/2;
    var h = (windowH-imgHeight)/2;
    $(innerdiv).css({"top":h, "left":w});
    $(outerdiv).fadeIn("fast");
  });
  $(innerdiv).mousedown(function(){
    var abs_x = event.clientX - $(innerdiv).offset().left;
    var abs_y = event.clientY - $(innerdiv).offset().top;
    $(document).mousemove(function (e) {
      var xPos = (e.clientX-abs_x)  + "px";
      var yPos = (e.clientY -abs_y) + "px";
      $(innerdiv).css("left", xPos);
      $(innerdiv).css("top", yPos);
    });
  })
  $(document).mouseup(function(){
    $(document).unbind('mousemove');
  })
}
</script>
<% end %>