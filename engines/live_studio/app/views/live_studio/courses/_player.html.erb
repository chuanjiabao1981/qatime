<div class="row">
  <div class="video-area" id="player-and-chat">
    <div class="area-left">
      <div class="area-left-title"><%= @course.name %></div>
      <div class="area-left-con">
        <video id="my-video" style="overflow: hidden;" class="video-js"  x-webkit-airplay="allow" webkit-playsinline controls poster="<%= image_url 'loading.png' %>" preload="auto" width="" height="" data-setup="{}">
        </video>
      </div>
    </div>
        
    <div class="area-right">
      <div class="area-right-title">
        <%= t "activerecord.view.chat.chat_team_members_count" %>
        <span id="team_online_count" class="online">0</span>
      </div>
      <div class="area-right-con">
        <video id="small-video" class="video-js"  x-webkit-airplay="allow" webkit-playsinline controls poster="<%= image_url 'loading.png' %>" preload="auto" width="" height="" data-setup="{}">
        </video>

      </div>
      <%= render 'play_chat' %>
    </div>
  </div>

  <div id="no-flash-area" style="display: none;">
    <p align="center">
      <%= t("activerecord.view.flash_can_not_call_msg.flash_uninstall_or_too_old_msg") %>
      <%= link_to t("activerecord.view.flash_can_not_call_msg.click_here_msg"), "https://get.adobe.com/cn/flashplayer/"  %>
      <%= t("activerecord.view.flash_can_not_call_msg.install_flash_msg") %>
    </p>
  </div>
</div>


<%= content_for :javascript do %>
<script>
  $(function() {
    var boardPlayer, cameraPlayer;
    var timer = -1;
    var state = 'init';
    // var camera_stream = '<%= @course.camera_pull_stream('http') %>';
    // var board_stream = '<%= @course.board_pull_stream('http') %>';

    var camera_stream = 'http://va0a19f55.live.126.net/live/d681ee6de6c24ae7b9f00d863bf806e1.flv?netease=va0a19f55.live.126.net';
    var board_stream = 'http://va0a19f55.live.126.net/live/74cecd22f8e34e6f95a8863042d3ba76.flv?netease=va0a19f55.live.126.net';


    // 白板播放器
    boardPlayer = neplayer("my-video", {
      bigPlayButton: false,
      controlBar: {
        progressControl: false,
        remainingTimeDisplay: false
      }
    }, function() {
      var barrageButton = $('<button class="vjs-barrage-control vjs-control vjs-button vjs-playing" type="button" aria-live="polite"></button>');
      barrageButton.html('<%= image_tag "barrage.png" %>');
      var refreshButton = $('<button class="vjs-refresh-control vjs-control vjs-button vjs-playing" type="button" aria-live="polite"></button>');
      refreshButton.html('<%= image_tag "refresh.png" %>');
      $("#my-video .vjs-control-bar").children(":eq( 2 )").after(barrageButton);
      $("#my-video .vjs-control-bar").children(":first").after(refreshButton);

      // 弹幕
      var barrage = new Barrage("my-video");
      $("#my-video .vjs-control-bar").on('click', '.vjs-barrage-control', function() {
        if(barrage.active) {
          barrage.turnOff();
          $("#my-video .vjs-barrage-control img").attr("src", '<%= image_url "barrage-ban.png" %>');
        } else {
          barrage.turnOn();
          $("#my-video .vjs-barrage-control img").attr("src", '<%= image_url "barrage.png" %>');
        }
      });
      if(window.live_chat) live_chat.setBarrage(barrage);


      // 重置
      $("#my-video .vjs-control-bar").on('click', '.vjs-refresh-control', function() {
        boardPlayer.reset();
        if(cameraPlayer) cameraPlayer.reset();
        state = 'init';
        set_timer();
      });

    });

    boardPlayer.onError(function(err){
      console.log(err.errCode);
      console.log(err.errMsg);
      boardPlayer.reset();
      state = 'init';
      set_timer();
    });

    boardPlayer.onPlayState(1,function(){
      console.log('board play');
    });
    boardPlayer.onPlayState(2,function(){
      console.log('board pause');
    });
    boardPlayer.onPlayState(3,function(){
      console.log('board ended');
      boardPlayer.reset();
      state = 'init';
      set_timer();
    });

    boardPlayer.on('ended', function(){
      console.log('board ended');
      boardPlayer.reset();
      state = 'init';
      set_timer();
    });

    boardPlayer.setDataSource({
      type: "video/x-flv",
      src: board_stream
    });
    boardPlayer.play();

    // 摄像头
    cameraPlayer = neplayer("small-video", {
      bigPlayButton: false,
      controlBar: false
    }, function() {
    });
    // cameraPlayer.play();
    cameraPlayer.onError(function(err){
      console.log(err.errCode);
      console.log(err.errMsg);
      cameraPlayer.reset();
      state = 'init';
      set_timer();
    });

    cameraPlayer.onPlayState(1,function(){
      console.log('camera play');
    });
    cameraPlayer.onPlayState(2,function(){
      console.log('camera pause');
    });
    cameraPlayer.onPlayState(3,function(){
      console.log('camera ended');
      cameraPlayer.reset();
      state = 'init';
      set_timer();
    });
    cameraPlayer.on('ended', function(){
      console.log('camera ended');
      cameraPlayer.reset();
      state = 'init';
      set_timer();
    });

    

    cameraPlayer.setDataSource({
      type: "video/x-flv",
      src: board_stream
    });
    cameraPlayer.play();

    function player_status(){
      $.get("/live_studio/courses/<%= @course.id %>/live_status", {}, function (data, status) {
        if (status == 'success') {
          console.log('player_status');
          console.log(data);
          if (data['board'] == 1 && boardPlayer.getPlayState() != 1) {
            boardPlayer.setDataSource({
              type: "video/x-flv",
              src: board_stream
            });
            boardPlayer.play();
          }
          if (data['camera'] == 1 && cameraPlayer.getPlayState() != 1) {
            cameraPlayer.setDataSource({
              type: "video/x-flv",
              src: camera_stream
            });
            cameraPlayer.play();
          }
          if( data['board'] == 1 && data['camera'] == 1){
            state = 'live';
            clearInterval(timer);
            timer = -1;
          }
        }
      });
    }

    function set_timer(){
      if(camera_stream.trim() == '' || board_stream.trim() == '') return
      player_status();
      if(state == 'init' && timer == -1){
        timer = setInterval(player_status, 20 * 1000);
      }
    }

    //判断flash是否安装
    // if(flashChecker().f) {
    //   set_timer();
    // } else{
    //   $("#player-and-chat").hide();
    //   $("#no-flash-area").show() //提示div
    // }
  });
</script>

<% end %>