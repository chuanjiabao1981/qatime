<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="renderer" content="webkit">
<title>答疑时间</title>
<%= stylesheet_link_tag "front_live", media: "all", "data-turbolinks-track" => false %>

<%= javascript_include_tag "live_studio/application", "data-turbolinks-track" => false %>
<%= javascript_include_tag "//nos.netease.com/vod163/nep.min.js", "data-turbolinks-track" => false %>
<%= stylesheet_link_tag "//nos.netease.com/vod163/nep.min.css", media: "all", "data-turbolinks-track" => false %>
</head>
<body class="live-body">
    
<%= render 'layouts/live_header' %>
<div class="live-head">
 <div class="container live-big">
  <div class="row">
      <div class="video-area">
        <div class="area-left">
          <div class="area-left-title">
            <span>北京高级急速冲刺训练班专业讲解-数学辅导班</span>
            <span>
              <%= image_tag "person-1.png" %>
              30
            </span>
          </div>
          <div class="area-left-con">
            <video id="my-video" style="overflow: hidden;" class="video-js"  x-webkit-airplay="allow" webkit-playsinline controls poster="<%= image_url 'big_loading.png' %>" preload="auto" width="" height="" data-setup="{}">
            </video>
         </div>
        </div>
        
        <div class="area-right">
          <div class="area-right-title">
            <%= link_to root_path do -%>
              <%= image_tag "download.png" %>
              <span>下载APP</span>
            <% end -%>
          </div>
          <div class="area-right-con">
            <video id="small-video" class="video-js"  x-webkit-airplay="allow" webkit-playsinline controls poster="<%= image_url 'small_loading.png' %>" preload="auto" width="" height="" data-setup="{}">
            </video>
          </div>
      </div>
    </div>
   </div>
   </div> 
  </div>
  
 

 
     



<script>
$(function() {
  var boardPlayer, cameraPlayer;
  var timer = null;
  var cameraStream = '<%= @course.camera_pull_stream("http") %>';
  var boardStream = '<%= @course.board_pull_stream("http") %>';
  var initStatus = 0;
  var liveStatusStep = '<%= LiveStudio::Lesson.beat_step.to_i * 3 * 1000 %>';

  // 立即播放
  function playNow(player, url) {
    var lowUrl = url.toLowerCase(),
        urlType = lowUrl.substring(0, 4),
        type;
    if (url === '') return;
    switch (urlType) {
      case 'http':
        if (lowUrl.indexOf('mp4') !== -1) {
            type = 'video/mp4';
        } else if (lowUrl.indexOf('flv') !== -1) {
            type = 'video/x-flv';
        } else if (lowUrl.indexOf('m3u8') !== -1) {
            type = 'application/x-mpegURL';
        }
        break;
      case 'rtmp':
        type = 'rtmp/flv';
        break;
    }
    player.setDataSource({ type: type, src: url });
    player.play();
  }

  function playerStatus() {
    console.log("get status " + initStatus);

    if(initStatus <= 1) return false;
    $.get("<%= live_studio.live_status_course_path(@course) %>", function (data) {
      if (data['board'] == 1 && boardPlayer.getPlayState() != 1) {
        console.log("start play board");
        playNow(boardPlayer, boardStream);
      }
      if (data['camera'] == 1 && cameraPlayer.getPlayState() != 1) {
        console.log("start play camera");
        playNow(cameraPlayer, cameraStream);
      }
      if( data['board'] == 1 && data['camera'] == 1){
        clearInterval(timer);
        timer = null;
      }
    });
  }

  // 刷新按钮
  var Component = neplayer.getComponent("Component");
  var RefreshComponent = neplayer.extend(Component, {
    createEl: function(){
      var button = document.createElement("button");
      button.innerHTML = '<%= image_tag "refresh.png" %>';
      return button;
    }
  });

  var refreshComponent = new RefreshComponent();

  refreshComponent.on("click",function(){
    if(boardPlayer) boardPlayer.refresh();
    if(cameraPlayer) cameraPlayer.refresh();
  });
  // 刷新按钮结束

  // 弹幕按钮
  var BarrageComponent = neplayer.extend(Component, {
    createEl: function(){
      var button = document.createElement("button");
      button.innerHTML = '<%= image_tag "barrage.png", id: "barrage-btn" %>';
      return button;
    }
  });

  var barrageComponent = new BarrageComponent();
  var barrage = new Barrage("my-video");
  barrageComponent.on("click",function(){
    if(barrage.active) {
      barrage.turnOff();
      $("#barrage-btn").attr("src", '<%= image_url "barrage-ban.png" %>');
    } else {
      barrage.turnOn();
      $("#barrage-btn").attr("src", '<%= image_url "barrage.png" %>');
    }
  });

  // 弹幕按钮结束

  function addButton() {
    // 弹幕按钮
    if(window.live_chat) live_chat.setBarrage(barrage);
    boardPlayer.corePlayer.controlBar.addChild(barrageComponent, {}, 2);
    // 添加刷新按钮
    boardPlayer.corePlayer.controlBar.addChild(refreshComponent, {}, 1);
  }

  // 初始化白板
  function initBoard() {
    // 白板播放器
    boardPlayer = neplayer("my-video", {
      bigPlayButton: false,
      controlBar: {
        progressControl: false,
        liveDisplay: false,
        remainingTimeDisplay: false
      }
    }, function() {
      addButton();
      // damu();
      initStatus = initStatus + 1;
      console.log("board init end " + initStatus);
      playerStatus();
    });
  }

  // 初始化摄像头
  function initCamera() {
    // 摄像头
    cameraPlayer = neplayer("small-video", {
      bigPlayButton: false,
      controlBar: false
    }, function() {
      initStatus = initStatus + 1;
      console.log("camera init end " + initStatus);
      playerStatus();
    });
  }

  // 设置定时查询任务
  function setTimer() {
    if(timer === null) {
      timer = setInterval(playerStatus, liveStatusStep);
    }
  }

  initBoard();
  initCamera();

  boardPlayer.onPlayState(3, function(){
    setTimer();
  });

  cameraPlayer.onPlayState(3, function(){
    setTimer();
  });

  setTimer();
});
</script>>
</body>
</html>